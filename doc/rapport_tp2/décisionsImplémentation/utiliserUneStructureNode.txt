Lorsqu'est venu le moment d'implémenter la liste doublement chainée, nous avions besoin de représenter chacun des maillons de la chaine. Nous nous sommes dit qu'une classe interne privée pourrait faire l'affaire. Cette classe, que nous avons appelée « Node », devait permettre de conserver une référence vers le maillon précédent de la chaine, une référence vers le maillon suivant ainsi qu'une référence vers la donnée stockée dans ce maillon. La grande question que nous avons dû nous poser porte sur l'interface de cette classe. En appliquant religieusement les notions de conception vues en classe, nous aurions écrit une classe comportant un constructeur, trois attributs privés, trois accesseurs et trois mutateurs. Ceci aurait fait une bien grosse classe et cette encapsulation n'aurait pas apporté grand-chose puisque la classe « Node » serait utilisée uniquement pour implémenter la liste. Personne d'autre n'ayant besoin de manipuler cette classe, ces ajouts auraient simplement alourdi le code. Nous avons donc décidé d'implémenter la classe « Node » comme une simple structure en C : une classe avec des attributs publics.
