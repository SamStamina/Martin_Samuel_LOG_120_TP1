Lorsqu'est venu le temps d'implémenter la liste doublement chaînée, nous avions trois possibilités : imiter la bibliothèque standard et implémenter une liste d'objets de type « Object », implémenter directement une liste de « Shape » ou utiliser les « generics » afin que la liste puisse gérer n'importe quel type de données. Comme une liste doublement chaînée est une classe généraliste à forte probabilité de réutilisation, il était hors de question de la gaspiller en l'enchainant à l'application courante en lui faisant directement gérer des « Shape ». Nous avons ensuite décidé de ne pas utiliser le type « Object » parce que cette façon de faire a trois inconvénients : elle permet de mettre plusieurs objets non reliés dans la liste, elle oblige à utiliser un « cast » lorsque l'on récupère un objet et n'offre aucune validation de type lorsque l'on insère un objet. Nous avons donc décidé d'utiliser les « generics » afin que l'utilisateur puisse spécifier quel type d'objets la liste doit contenir. Il est intéressant de noter qu'il est possible, avec cette technique, d'obtenir exactement le même effet que la dernière possibilité d'implémentation abordée en spécifiant que la liste contiendra des éléments de type « Object ».
