Les instruction du travail demandaient de pouvoir trier les formes selon leur aire et selon la distance maximale entre deux points constituant celles-ci. Notre premier réflexe fut de créer une classe fournissant des fonctions permettant d'effectuer ces calculs géométriques de façon à avoir une interface unifiée pour les formes. Cependant, nous avons rencontré le même problème que pour la méthode "Shape.draw()", qui permet d'afficher la forme sur un environement graphique. Nous avions choisi de déclarer la méthode dans la classe "Shape" et de la définir dans les classes dérivées. En effet, dû à notre façon de représenter les formes, il était impossible à la classe "Shape" de fournir toutes les informations nécessaires pour qu'une classe externe puisse faire de tels traitement. D'un autre coté, il aurait été beaucoup trop complexe de concevoir et d'implémenter une représentation générique des formes s'appliquant à tout type de forme géométrique.

Pour le calcul d'aire et de distance maximale, nous avons donc suivi le même raisonnement que pour l'affichage et avons déclarés les méthodes dans la classe "Shape", réservant la définition aux classes dérivées. Les classe "Line", "Oval" et "Rectangle" doivent donc calculer leur aire ainsi que la distance maximale entre deux de leur point. De leur coté, les classe "Circle" et "Square" n'ont pas à le faire car, héritant de "Oval" et "Rectangle", ils héritent ausi des méthodes de leur parents. Puisque les calcul pour un rectangles sont les mêmes que pour un carré, il n'est pas nécessaire de redéfinir ces deux méthodes. Le même principe s'applique pour un oval et un cercle.
