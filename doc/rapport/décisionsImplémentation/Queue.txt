Lorsqu'est venu le temps de stocker un certain nombre de formes afin qu'elles soient affichées, nous avions l'intension d'utiliser le type interface Queue offert par la bibliothèque standard Java. Seulement, celle-ci hérite du type interface Collection qui, pour des raisons pédagogiques, nous a été interdit d'usage. Nous avons donc décidés d'écrire notre propre classe implémentant le principe FIFO (First In First Out).

Lorsqu'est venu le temps d'écrire ladite classe, nous avions plusieurs choix d'implémentations : nous aurions pu utiliser une liste doublement chainée ou bien une solution à base de tableaux dynamiques. La premère solution nous garentie un temps d'insertion et de suppression constant aux deux extrémitées mais semblait une solution trops lourde à mettre en place pour la grosseur de l'exercice en cours. Nous avons donc décidés d'utiliser un tableau dynamique.

Pour ce faire, nous stockons simplement un tableau de taille fixe et concervons en mémoire l'indice du dernier élément inséré. Si, au moment d'insérer un nouvel élément, le tableau est plein, un nouveau tableau d'une taille deux fois plus grande est alloué et chacun des objets contenus dans le premier tableau est copié dans le second. Une référence vers le second tableau est alors concervé et la référence vers le premier est supprimée. Ce système permet donc de gérer un nombre d'éléments proportionnel à la mémoire disponnible sur la machine exécutant le programme.

Dans ce tableau dymanique, les élément sont ajouté à la fin et retirés au début. Cette implémentation implique donc de déplacer la totalité des éléments du tableau d'une position à chaque suppression d'élément mais nous garentie tout de même un temps d'insertion constant à la fin de la séquence.

C'est un designe un peut naif puique, pour une séquence de grande taille, le temps de suppression serait très important, mais à l'aventage d'être simple et rapide à mettre en place. De plus, le contexte de l'exercice nous imposait de gérer un groupe d'une dizaine d'éléments et la perte de performance occasionée est négligable.
